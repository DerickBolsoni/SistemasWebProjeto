#!/bin/bash

# Script de deploy para ambiente de desenvolvimento
# FastDelivery Tracker - Ambiente DEV

set -e

# Configura√ß√µes
ENVIRONMENT="dev"
STACK_NAME="fast-delivery-tracker-dev"
REGION="sa-east-1"
LAMBDA_ZIP_FILE="lambdas.zip"

echo "üöÄ Iniciando deploy do FastDelivery Tracker - Ambiente DEV"
echo "=================================================="

# Verificar se AWS CLI est√° configurado
if ! aws sts get-caller-identity > /dev/null 2>&1; then
    echo "‚ùå AWS CLI n√£o est√° configurado. Execute 'aws configure' primeiro."
    exit 1
fi

# Criar arquivo ZIP com as fun√ß√µes Lambda
echo "üì¶ Criando pacote das fun√ß√µes Lambda..."
cd lambdas
zip -r ../$LAMBDA_ZIP_FILE *.py requirements.txt
cd ..

# Deploy do CloudFormation
echo "‚òÅÔ∏è  Fazendo deploy do CloudFormation..."
aws cloudformation deploy \
    --template-file cloudformation/main-template.yaml \
    --stack-name $STACK_NAME \
    --parameter-overrides Environment=$ENVIRONMENT \
    --capabilities CAPABILITY_IAM \
    --region $REGION

# Obter ARNs das fun√ß√µes Lambda
ADD_ORDER_LAMBDA=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query 'Stacks[0].Outputs[?OutputKey==`AddOrderLambdaArn`].OutputValue' \
    --output text)

SET_DELIVERED_LAMBDA=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query 'Stacks[0].Outputs[?OutputKey==`SetAsDeliveredLambdaArn`].OutputValue' \
    --output text)

NOTIFY_OWNER_LAMBDA=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query 'Stacks[0].Outputs[?OutputKey==`NotifyOwnerLambdaArn`].OutputValue' \
    --output text)

# Atualizar c√≥digo das fun√ß√µes Lambda
echo "üîÑ Atualizando c√≥digo das fun√ß√µes Lambda..."

aws lambda update-function-code \
    --function-name $ADD_ORDER_LAMBDA \
    --zip-file fileb://$LAMBDA_ZIP_FILE \
    --region $REGION

aws lambda update-function-code \
    --function-name $SET_DELIVERED_LAMBDA \
    --zip-file fileb://$LAMBDA_ZIP_FILE \
    --region $REGION

aws lambda update-function-code \
    --function-name $NOTIFY_OWNER_LAMBDA \
    --zip-file fileb://$LAMBDA_ZIP_FILE \
    --region $REGION

# Obter URL da API
API_URL=$(aws cloudformation describe-stacks \
  --stack-name $STACK_NAME \
  --region $REGION \
  --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayUrl`].OutputValue' \
  --output text)

# Limpar arquivo ZIP
rm $LAMBDA_ZIP_FILE

echo ""
echo "‚úÖ Deploy conclu√≠do com sucesso!"
echo "=================================================="
echo "üåê URL da API: $API_URL"
echo "üìã Endpoints dispon√≠veis:"
echo "   POST   $API_URL/add-order"
echo "   PUT    $API_URL/order/{order_id}/delivered"
echo ""
echo "üîß Para testar a API:"
echo "curl -X POST $API_URL/add-order \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{\"customer_name\":\"Jo√£o Silva\",\"customer_email\":\"joao@email.com\",\"delivery_address\":\"Rua A, 123\",\"items\":[\"Hamb√∫rguer Artesanal\",\"Batata Frita\",\"Coca-Cola\"]}'"
echo ""
echo "üìä Para verificar logs:"
echo "aws logs describe-log-groups --region $REGION"
